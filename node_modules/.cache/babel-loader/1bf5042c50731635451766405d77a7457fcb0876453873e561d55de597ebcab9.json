{"ast":null,"code":"var _jsxFileName = \"/Users/iseunghwan/Desktop/HYU_IS/3_summer/\\u1106\\u116E\\u110C\\u1166 \\u1111\\u1169\\u11AF\\u1103\\u1165/fintech2-llm/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { sendMessageToChatbot } from '../api/chatbot';\nimport QuickActionButtons from './QuickActionButtons';\nimport sendButtonIcon from '../assets/icons/send_button.svg';\nimport chatbotIcon from '../assets/icons/chatbot_icon.svg';\nimport userIcon from '../assets/icons/default_image_icon.svg';\nimport '../styles/ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: 'bot',\n    text: '',\n    fullText: '안녕하세요 번개처럼 빠르게 도와드리는 챗봇입니다. 소개멘트를 작성해주세요 소개멘트를 작성해주세요 소개멘트를 작성해주세요. 지금정지해제를 위해서는 이의제기 신청서, 신분증 사본...',\n    typing: true,\n    // 타이핑 효과를 위한 플래그\n    name: 'ChatBot'\n  }]);\n  const [completedActions, setCompletedActions] = useState([]); // 각 버튼의 상태를 관리하는 배열\n  const typingIntervalRef = useRef(null);\n  useEffect(() => {\n    const lastMessageIndex = messages.length - 1;\n    const lastMessage = messages[lastMessageIndex];\n    if (lastMessage && lastMessage.typing) {\n      let currentIndex = lastMessage.text.length;\n      typingIntervalRef.current = setInterval(() => {\n        setMessages(prevMessages => {\n          const newMessages = [...prevMessages];\n          if (currentIndex < lastMessage.fullText.length) {\n            newMessages[lastMessageIndex] = {\n              ...lastMessage,\n              text: lastMessage.fullText.slice(0, currentIndex + 1),\n              typing: true\n            };\n            currentIndex++;\n          } else {\n            clearInterval(typingIntervalRef.current);\n            newMessages[lastMessageIndex] = {\n              ...lastMessage,\n              typing: false\n            };\n          }\n          return newMessages;\n        });\n      }, 100); // 타이핑 속도 조절\n    }\n    return () => clearInterval(typingIntervalRef.current);\n  }, [messages]);\n  const quickActions = [{\n    title: '이의제기신청서',\n    subtitle: '이의제기'\n  }, {\n    title: '신분증 사본(필수)',\n    subtitle: '신분증 발급'\n  }, {\n    title: '본인서명',\n    subtitle: '정부24에서'\n  }, {\n    title: '정보제공2',\n    subtitle: '내용'\n  }, {\n    title: '정보제공3',\n    subtitle: '내용'\n  }, {\n    title: '정보제공4',\n    subtitle: '내용'\n  }, {\n    title: '정보제공5',\n    subtitle: '내용'\n  }, {\n    title: '이렇게까지만함돠',\n    subtitle: '내용'\n  }];\n  const handleSendMessage = async messageText => {\n    const userMessage = {\n      type: 'user',\n      text: messageText,\n      fullText: messageText,\n      typing: false,\n      name: 'User'\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    try {\n      const response = await sendMessageToChatbot([...messages, userMessage]); // 배열로 전달\n      const botMessage = {\n        type: 'bot',\n        text: '',\n        fullText: response,\n        typing: true,\n        name: 'ChatBot'\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error(\"Error sending message to chatbot:\", error);\n    }\n  };\n  const handleActionClick = actionTitle => {\n    setCompletedActions(prevActions => {\n      if (prevActions.includes(actionTitle)) {\n        return prevActions.filter(title => title !== actionTitle); // 클릭된 버튼의 상태 해제\n      } else {\n        handleSendMessage(actionTitle);\n        return [...prevActions, actionTitle]; // 클릭된 버튼의 상태 설정\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: chatbotIcon,\n          alt: \"Chatbot Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uCC57\\uBD07\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"@\\uCE74\\uCE74\\uC624\\uBC45\\uD06C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${message.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: message.type === 'bot' ? chatbotIcon : userIcon,\n              alt: \"Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: message.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(QuickActionButtons, {\n        actions: quickActions,\n        completedActions: completedActions,\n        onActionClick: handleActionClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uAD81\\uAE08\\uD558\\uC2E0 \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        onKeyPress: event => {\n          if (event.key === 'Enter') {\n            handleSendMessage(event.target.value);\n            event.target.value = '';\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const input = document.querySelector('.chat-footer input');\n          handleSendMessage(input.value);\n          input.value = '';\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sendButtonIcon,\n          alt: \"Send Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"c2mafdr2xcXG82SNg43MHFfuCz8=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","sendMessageToChatbot","QuickActionButtons","sendButtonIcon","chatbotIcon","userIcon","jsxDEV","_jsxDEV","ChatWindow","_s","messages","setMessages","type","text","fullText","typing","name","completedActions","setCompletedActions","typingIntervalRef","lastMessageIndex","length","lastMessage","currentIndex","current","setInterval","prevMessages","newMessages","slice","clearInterval","quickActions","title","subtitle","handleSendMessage","messageText","userMessage","response","botMessage","error","console","handleActionClick","actionTitle","prevActions","includes","filter","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","actions","onActionClick","placeholder","onKeyPress","event","key","target","value","onClick","input","document","querySelector","_c","$RefreshReg$"],"sources":["/Users/iseunghwan/Desktop/HYU_IS/3_summer/무제 폴더/fintech2-llm/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { sendMessageToChatbot } from '../api/chatbot';\nimport QuickActionButtons from './QuickActionButtons';\nimport sendButtonIcon from '../assets/icons/send_button.svg';\nimport chatbotIcon from '../assets/icons/chatbot_icon.svg';\nimport userIcon from '../assets/icons/default_image_icon.svg';\nimport '../styles/ChatWindow.css';\n\nconst ChatWindow = () => {\n  const [messages, setMessages] = useState([\n    {\n      type: 'bot',\n      text: '',\n      fullText: '안녕하세요 번개처럼 빠르게 도와드리는 챗봇입니다. 소개멘트를 작성해주세요 소개멘트를 작성해주세요 소개멘트를 작성해주세요. 지금정지해제를 위해서는 이의제기 신청서, 신분증 사본...',\n      typing: true, // 타이핑 효과를 위한 플래그\n      name: 'ChatBot'\n    }\n  ]);\n  const [completedActions, setCompletedActions] = useState([]); // 각 버튼의 상태를 관리하는 배열\n  const typingIntervalRef = useRef(null);\n\n  useEffect(() => {\n    const lastMessageIndex = messages.length - 1;\n    const lastMessage = messages[lastMessageIndex];\n\n    if (lastMessage && lastMessage.typing) {\n      let currentIndex = lastMessage.text.length;\n      typingIntervalRef.current = setInterval(() => {\n        setMessages((prevMessages) => {\n          const newMessages = [...prevMessages];\n          if (currentIndex < lastMessage.fullText.length) {\n            newMessages[lastMessageIndex] = {\n              ...lastMessage,\n              text: lastMessage.fullText.slice(0, currentIndex + 1),\n              typing: true\n            };\n            currentIndex++;\n          } else {\n            clearInterval(typingIntervalRef.current);\n            newMessages[lastMessageIndex] = {\n              ...lastMessage,\n              typing: false\n            };\n          }\n          return newMessages;\n        });\n      }, 100); // 타이핑 속도 조절\n    }\n\n    return () => clearInterval(typingIntervalRef.current);\n  }, [messages]);\n\n  const quickActions = [\n    { title: '이의제기신청서', subtitle: '이의제기' },\n    { title: '신분증 사본(필수)', subtitle: '신분증 발급' },\n    { title: '본인서명', subtitle: '정부24에서' },\n    { title: '정보제공2', subtitle: '내용' },\n    { title: '정보제공3', subtitle: '내용' },\n    { title: '정보제공4', subtitle: '내용' },\n    { title: '정보제공5', subtitle: '내용' },\n    { title: '이렇게까지만함돠', subtitle: '내용' }\n  ];\n\n  const handleSendMessage = async (messageText) => {\n    const userMessage = { type: 'user', text: messageText, fullText: messageText, typing: false, name: 'User' };\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n\n    try {\n      const response = await sendMessageToChatbot([...messages, userMessage]); // 배열로 전달\n      const botMessage = {\n        type: 'bot',\n        text: '',\n        fullText: response,\n        typing: true,\n        name: 'ChatBot'\n      };\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error(\"Error sending message to chatbot:\", error);\n    }\n  };\n\n  const handleActionClick = (actionTitle) => {\n    setCompletedActions((prevActions) => {\n      if (prevActions.includes(actionTitle)) {\n        return prevActions.filter(title => title !== actionTitle); // 클릭된 버튼의 상태 해제\n      } else {\n        handleSendMessage(actionTitle);\n        return [...prevActions, actionTitle]; // 클릭된 버튼의 상태 설정\n      }\n    });\n  };\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-header\">\n        <div className=\"chat-header-icon\">\n          <img src={chatbotIcon} alt=\"Chatbot Icon\" />\n        </div>\n        <div className=\"chat-header-title\">\n          <h1>챗봇</h1>\n          <span>@카카오뱅크</span>\n        </div>\n      </div>\n      <div className=\"chat-body\">\n        {messages.map((message, index) => (\n          <div key={index} className={`chat-message ${message.type}`}>\n            <div className=\"profile\">\n              <div className=\"avatar\">\n                <img src={message.type === 'bot' ? chatbotIcon : userIcon} alt=\"Avatar\" />\n              </div>\n              <div className=\"name\">{message.name}</div>\n            </div>\n            <div className=\"message\">\n              <p>{message.text}</p>\n            </div>\n          </div>\n        ))}\n        <QuickActionButtons actions={quickActions} completedActions={completedActions} onActionClick={handleActionClick} />\n      </div>\n      <div className=\"chat-footer\">\n        <input \n          type=\"text\" \n          placeholder=\"궁금하신 내용을 입력해주세요.\" \n          onKeyPress={(event) => {\n            if (event.key === 'Enter') {\n              handleSendMessage(event.target.value);\n              event.target.value = '';\n            }\n          }}\n        />\n        <button \n          onClick={() => {\n            const input = document.querySelector('.chat-footer input');\n            handleSendMessage(input.value);\n            input.value = '';\n          }}\n        >\n          <img src={sendButtonIcon} alt=\"Send Icon\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}