import { BaseConversation } from './base-conversations.js';
import { Chunk, Message, ModelResponse, QueryResponse } from '../global/types.js';
export declare abstract class BaseModel {
    private readonly baseDebug;
    private static conversations;
    private static defaultTemperature;
    static setDefaultTemperature(temperature?: number): void;
    static setConversations(conversations: BaseConversation): void;
    private readonly _temperature?;
    constructor(temperature?: number);
    get temperature(): number;
    init(): Promise<void>;
    query(system: string, userQuery: string, supportingContext: Chunk[], conversationId?: string): Promise<QueryResponse>;
    private extractUniqueSources;
    protected abstract runQuery(system: string, userQuery: string, supportingContext: Chunk[], pastConversations: Message[]): Promise<ModelResponse>;
}
